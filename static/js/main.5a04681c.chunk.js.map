{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","props","useState","tournamentname","location","category","date","website","enddate","formValid","tournament","setTournament","handletournamentInput","event","elementName","target","name","value","showSubmittedData","console","log","undefined","Fragment","className","type","onChange","toString","placeholder","onClick","preventDefault","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAkJeA,EAnIkC,SAACC,GAAW,IAAD,IAC1D,EAAoCC,mBAAqB,CACvDC,eAAgBF,EAAME,eACtBC,SAAUH,EAAMG,SAChBC,SAAUJ,EAAMI,SAChBC,KAAML,EAAMK,KACZC,QAASN,EAAMM,QACfC,QAASP,EAAMO,QACfC,WAAW,IAPb,mBAAOC,EAAP,KAAmBC,EAAnB,KASMC,EAAwB,SAACC,GAC7B,IAAMC,EAAcD,EAAME,OAAOC,KAEjCL,EAAc,2BACTD,GADQ,kBAEVI,EAAcD,EAAME,OAAOE,UAe1BC,EAAoB,WAExB,GADAC,QAAQC,IAAIV,EAAWD,WACnBC,EAAWD,UACb,OACE,gCACE,8CACA,6BAAKC,EAAWP,iBAChB,6BAAKO,EAAWN,WAChB,6BAAKM,EAAWL,iBACWgB,IAAvBX,EAAWF,SAA0BE,EAAWF,eAAiCa,IAApBX,EAAWJ,MAAuBI,EAAWJ,MAC1G,qBACA,iBAKZ,OACE,cAAC,IAAMgB,SAAP,UACE,gCACA,oBAAIC,UAAU,QAAd,8BADA,QAIA,uBACEC,KAAK,OACLR,KAAK,iBACLC,MAAOP,EAAWP,eAClBsB,SAAUb,IAEZ,uBAVA,YAYA,uBACEY,KAAK,OACLR,KAAK,WACLC,MAAOP,EAAWN,SAClBqB,SAAUb,IAEZ,uBAlBA,YAoBA,uBACEY,KAAK,OACLR,KAAK,WACLC,MAAOP,EAAWL,SAClBoB,SAAUb,IAEZ,uBA1BA,cA4BA,uBACEY,KAAK,OACLR,KAAK,OACLC,MAAK,UAAEP,EAAWJ,YAAb,aAAE,EAAiBoB,WACxBD,SAAUb,EACVe,YAAY,eAEd,uBAnCA,YAqCA,uBACEH,KAAK,OACLR,KAAK,UACLC,MAAK,UAAEP,EAAWF,eAAb,aAAE,EAAoBkB,WAC3BD,SAAUb,EACVe,YAAY,eAEd,uBA5CA,WA8CA,uBACEH,KAAK,OACLR,KAAK,UACLC,MAAOP,EAAWH,QAClBkB,SAAUb,IAEZ,wBAAQgB,QAlFS,SAACf,GACpBA,EAAMgB,iBAC4BhB,EAAMiB,cAExCnB,EAAc,2BACTD,GADQ,IAEXD,WAAW,KAEbS,IACAC,QAAQC,IAAIV,IAyEV,oBAIA,gCACE,2DACCA,EAAWD,UACV,gCACE,6BAAKC,EAAWP,iBAChB,6BAAKO,EAAWN,iBACUiB,IAAvBX,EAAWF,SAA0BE,EAAWF,eAAiCa,IAApBX,EAAWJ,MAAuBI,EAAWJ,MAC3G,oDAEA,gCACE,6BAAKI,EAAWJ,OAChB,6BAAKI,EAAWF,aAGpB,6BAAKE,EAAWH,aAGlB,iCC1HKwB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAKvC,eAAgB,GAAIC,SAAU,GAAIC,SAAU,GAAIC,UAAMe,EAAWd,QAAS,GAAIC,aAASa,EAAWZ,WAAW,MAEpHkC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a04681c.chunk.js","sourcesContent":["import React , { useState, ChangeEvent, MouseEvent } from 'react';\n\nimport './App.css';\n\n\ninterface Tournament {\n  tournamentname: string;\n  location: string;\n  category: string;\n  date: Date | undefined;\n  website: string;\n  enddate: Date | undefined;\n  formValid: boolean;\n}\n\nconst App: React.FunctionComponent<Tournament> = (props) => {\n  const [tournament, setTournament] = useState<Tournament>({\n    tournamentname: props.tournamentname,\n    location: props.location,\n    category: props.category,\n    date: props.date,\n    website: props.website,\n    enddate: props.enddate,\n    formValid: false,\n  });\n  const handletournamentInput = (event: ChangeEvent<HTMLInputElement>) => {\n    const elementName = event.target.name;\n    // console.log(elementName);\n    setTournament({\n      ...tournament,\n      [elementName]: event.target.value,\n    });\n  };\n  const handleSubmit = (event: MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    const button: HTMLButtonElement = event.currentTarget;\n    // setTournament();\n    setTournament({\n      ...tournament,\n      formValid: true,\n    });\n    showSubmittedData();\n    console.log(tournament);\n  };\n\n  const showSubmittedData = () => {\n    console.log(tournament.formValid);\n    if (tournament.formValid) {\n      return (\n        <div>\n          <h4>You Data is:</h4>\n          <h3>{tournament.tournamentname}</h3>\n          <h3>{tournament.location}</h3>\n          <h3>{tournament.category}</h3>\n          { ((tournament.enddate !== undefined) && tournament.enddate) < ((tournament.date !== undefined) && tournament.date)\n            ? 'Enter Correct Date'\n            : 'corretdate'}\n        </div>\n      );\n    }\n  };\n  return (\n    <React.Fragment >\n      <div >\n      <h2 className=\"entry\"> Tournament Data</h2>\n      \n      Name:\n      <input\n        type=\"text\"\n        name=\"tournamentname\"\n        value={tournament.tournamentname}\n        onChange={handletournamentInput}\n      />\n      <br></br>\n      Location:\n      <input\n        type=\"text\"\n        name=\"location\"\n        value={tournament.location}\n        onChange={handletournamentInput}\n      />\n      <br></br>\n      Category:\n      <input\n        type=\"text\"\n        name=\"category\"\n        value={tournament.category}\n        onChange={handletournamentInput}\n      />\n      <br></br>\n      Start Date:\n      <input\n        type=\"date\"\n        name=\"date\"\n        value={tournament.date?.toString()}\n        onChange={handletournamentInput}\n        placeholder=\"start Date\"\n      />\n      <br></br>\n      End Date:\n      <input\n        type=\"date\"\n        name=\"enddate\"\n        value={tournament.enddate?.toString()}\n        onChange={handletournamentInput}\n        placeholder=\"start Date\"\n      />\n      <br></br>\n      Website:\n      <input\n        type=\"text\"\n        name=\"website\"\n        value={tournament.website}\n        onChange={handletournamentInput}\n      />\n      <button onClick={handleSubmit} >\n        Submit\n      </button>\n      {/* <showSubmittedData /> */}\n      <div>\n        <h2>Tournamanet Information  </h2>\n        {tournament.formValid ? (\n          <div>\n            <h2>{tournament.tournamentname}</h2>\n            <h2>{tournament.location}</h2>\n            {((tournament.enddate !== undefined) && tournament.enddate) < ((tournament.date !== undefined) && tournament.date) ? (\n              <h2>Enter correct date</h2>\n            ) : (\n              <div>\n                <h2>{tournament.date}</h2>\n                <h2>{tournament.enddate}</h2>\n              </div>\n            )}\n            <h2>{tournament.website}</h2>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </div>\n    \n      </div>\n    </React.Fragment>\n  );\n};\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tournamentname={''} location={''} category={''} date={undefined} website={''} enddate={undefined} formValid={false} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}